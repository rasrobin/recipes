<?php

/**
 * @file
 * A module that allows you to add recipes in a form
 */

/**
 * Implements hook_help().
 *
 * Displays help and module information.
 *
 * @param path 
 *   Which path of the site we're using to display help
 * @param arg 
 *   Array that holds the current path as returned from arg() function
 */
function rasrobin_recipes_help($path, $arg) {
  switch ($path) {
  case "admin/help#rasrobin_recipes":
    return t("Show a form to add recipes"); 
    break; 
  }
}

/**
 * Add the recipe/add page to the menu
 */
function rasrobin_recipes_menu() {
  $items = [];

  $items['recipe/add'] = [ //this creates a URL that will call this form at "recipes/add-recipe"
    'title' => 'Submit a recipe', //page title
    'description' => 'Here you can add a recipe',
    'page callback' => 'drupal_get_form', //this is the function that will be called when the page is accessed.  for a form, use drupal_get_form
    'page arguments' => ['rasrobin_recipes_form_add'], //put the name of the form here
    'access arguments' => ['recipe_add'],
  ];

  $items['recipe/%rasrobin_recipes_content'] = [
    'title' => 'Recipe', //page title
    'description' => 'View a recipe',
    'page callback' => 'rasrobin_recipes_recipe_view',
    'page arguments' => [1],
    'access arguments' => ['recipe_manage'],
  ];

  return $items;
}

/**
 * Implements hook_theme().
 */
function rasrobin_recipes_theme() {
  $theme_hooks = array(
    'rasrobin_recipes' => array(
      'template' => 'rasrobin_recipes',
      'variables' => [
      	'title' => NULL,
      	'author_name' => NULL,
      	'author_email' => NULL,
      	'description' => NULL,
      	'instructions' => NULL,
      	'ingredients' => NULL,
      	'created_on' => NULL,
      ],
    ),
  );

  return $theme_hooks;
}

/**
 * Permissions
 */
function rasrobin_recipes_permission() {
  return [
    'recipe_manage' => [
      'title' => t('Manage recipes'),
      'description' => t('Access recipe detail pages'),
    ],
    'recipe_add' => [
      'title' => t('Add recipes'),
      'description' => t('Being able to add recipes'),
    ],
  ];
}

/**
 * Connect to database to retrieve a recipe by id
 *
 * @param Int recipe_id 
 * @return StdClass recipe
 */
function rasrobin_recipes_content_load($recipe_id) {
	return db_select('_rasrobin_recipes', 'r')
		->fields('r')
		->condition('id', $recipe_id)->execute()->fetchObject();
}

/**
 * Page showing a recipe
 *
 * @param StdClass recipe 
 */
function rasrobin_recipes_recipe_view(StdClass $recipe) {
 	$recipe_page['rasrobin_recipes_arguments'] = [
 		'#title' => $recipe->title,
 		'#author_name' => $recipe->author_name,
 		'#author_email' => $recipe->author_email,
 		'#description' => $recipe->description,
 		'#instructions' => $recipe->instructions,
 		'#ingredients' => $recipe->ingredients,
 		'#created_on' => $recipe->created_on,
    '#theme' => 'rasrobin_recipes',
    '#weight' => 1,
  ];

  return $recipe_page;
}

/**
 * The form - add recipe form
 */
function rasrobin_recipes_form_add($form, &$form_state) {
  $form['title'] = [
    '#type' => 'textfield',
    '#title' => 'recipe title',
    '#size' => 20,
    '#maxlength' => 255,
    '#required' => TRUE, 
  ];

  $form['author_name'] = [
    '#type' => 'textfield',
    '#title' => 'Author name',
    '#size' => 20,
    '#maxlength' => 255,
    '#required' => TRUE,
  ];

  $form['author_email'] = [
    '#type' => 'emailfield',
    '#title' => 'Author e-mail',
    '#size' => 20,
    '#maxlength' => 255,
    '#required' => TRUE,
  ];

  $form['description'] = [
    '#type' => 'textarea',
    '#title' => 'Recipe description',
    '#maxlength' => 500,
    '#required' => TRUE,
  ];

  $form['instructions'] = [
    '#type' => 'textarea',
    '#title' => 'Recipe instructions',
    '#required' => TRUE,
  ];

  $form['ingredients'] = [
    '#type' => 'textarea',
    '#title' => 'Recipe ingredients',
    '#required' => TRUE,
  ];

  $form['submit_button'] = [
    '#type' => 'submit',
    '#value' => t('Submit recipe'),
  ];
  
  return $form;
}

/**
 * Validate - add recipe form
 */
function rasrobin_recipes_form_add_validate($form, &$form_state) {
	if (valid_email_address($form_state['values']['author_email']) === FALSE){
    form_set_error('author_email', t('You must enter a valid e-mail address'));
  }

  if (strlen($form_state['values']['description']) > 500){
    form_set_error('description', t('You are not allowed to use more than 500 characters'));
  }
}

/**
 * Submit - add recipe form
 */
function rasrobin_recipes_form_add_submit($form, &$form_state) {
	global $user;
	$langcode = $GLOBALS['language_content']->language;

	$values = [];
	$skip_values = ['submit_button', 'form_build_id', 'form_token', 'form_id', 'op'];
	
	foreach ($form_state['values'] as $key => $value) {
		if (in_array($key, $skip_values) === false) {
			$values[$key] = check_plain($value);
		}
	}

	$values['uid'] = $user->uid;
	$values['language'] = $langcode;

	if (user_access('recipe_add')) {
	  // Here u can insert Your custom form values into your custom table.
	  db_insert('_rasrobin_recipes')->fields($values)->execute();
	  drupal_set_message(t('successfully submitted your recipe'), 'status'); 
	} else {
		drupal_set_message(t('you do not have enough rights to add recipes'), 'error');
	}

  $form_state['redirect'] = '/';
}